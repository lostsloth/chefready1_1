'use-strict';
import React, { Component } from 'react';
import {
    Text,
    View,
    TouchableHighlight,
    Image,
    StyleSheet,
} from 'react-native';

const FBSDK = require('react-native-fbsdk');
const {
    LoginButton,
    AccessToken,
    GraphRequest,
    GraphRequestManager,
} = FBSDK;

export default class Login extends Component {

    render() {
        return (
            <View style={styles.container}>
                <LoginButton
                    onLoginFinished={
                        (error, result) => {
                            if (error) {
                                alert("login has error: " + result.error);
                            } else if (result.isCancelled) {
                                alert("login is cancelled.");
                            } else {

                                AccessToken.getCurrentAccessToken().then((data) => {
                                    let accessToken = data.accessToken

                                    const responseInfoCallback = (error, result) => {
                                        if (error) {
                                            console.log(error)
                                            alert('Error fetching data: ' + error.toString());
                                        } else {
                                            console.log(result)
                                        }
                                    }
                                    const infoRequest = new GraphRequest(
                                        '/me',
                                        {
                                            accessToken: accessToken,
                                            parameters: {
                                                fields: {
                                                    string: 'name,first_name,last_name,email,picture'
                                                }
                                            }
                                        },
                                        responseInfoCallback,
                                        console.log(result)
                                    );
                                    new GraphRequestManager().addRequest(infoRequest).start()
                                })
                            }
                        }
                    } onLogoutFinished={() => console.log('signed out')} />
            </View>
        );
    }
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: '#F5FCFF',
    },
    shareText: {
        fontSize: 20,
        margin: 10,
    },
});

